namespace = pgs
@Residual_hull_value = 1
ship_event = {
	id = pgs.1
	hide_window = yes
	trigger = {
		THIS.owner = {
			has_country_flag = PARADOX_GENERATION_SYSTEM
		}
		has_component = PARADOX_GENERATION_SYSTEM
		NOT = {
			has_ship_flag = paradox_generation_system_cooldown
		}
	}
	is_triggered_only = false
	immediate = {
		THIS = {
			save_event_target_as = paradox_generation_system_ship
		}
		set_timed_ship_flag = {
			flag = paradox_generation_system_cooldown
			days = 3
		}
		THIS.solar_system = {
			every_ship_in_system = {
				limit = {
					if = {
						limit = {
							NOT = {
								event_target:paradox_generation_system_ship.owner = {
									has_country_flag = system_wide
								}
							}
						}
						is_in_combat = yes
					}
					NOT = {
						This = {
							is_owned_by = event_target:paradox_generation_system_ship.owner
						}
					}
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = ship_hp_amount_reduce_system
						}
					}
					export_trigger_value_to_variable = {
						trigger = has_hp
						variable = ship_hp_amount
					}
					subtract_variable = {
						which = ship_hp_amount
						value = @Residual_hull_value
					}
					reduce_hp = ship_hp_amount
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = shield_erasing_system
						}
					}
					export_modifier_to_variable = {
						modifier = ship_shield_reduction
						variable = ship_shield_reduction_number
					}
					multiply_variable = {
						which = ship_shield_reduction_number
						value = -1
					}
					change_variable = {
						which = ship_shield_reduction_number
						value = 1
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_shield_reduction value < 1.00	}
						}
						remove_modifier = swn_mod_ship_shield_reduction
						add_modifier = {	modifier = swn_mod_ship_shield_reduction	months = 1	multiplier = ship_shield_reduction_number	}
					}
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = shield_erasing_system
						}
					}
					export_modifier_to_variable = {
						modifier = ship_armor_reduction
						variable = ship_armor_reduction_number
					}
					multiply_variable = {
						which = ship_armor_reduction_number
						value = -1
					}
					change_variable = {
						which = ship_armor_reduction_number
						value = 1
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_armor_reduction value < 1.00	}
						}
						remove_modifier = swn_mod_ship_armor_reduction
						add_modifier = {	modifier = swn_mod_ship_armor_reduction	months = 1	multiplier = ship_armor_reduction_number	}
					}
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = narrative_editing_warship_narrative_strike
						}
					}
					destroy_ship = This
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = aggro_range_editor
						}
					}
					fleet = {
						set_aggro_range = 0
					}
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = anti_hull_repair
						}
					}
					export_modifier_to_variable = {
						modifier = ship_hull_regen_add_perc
						variable = ship_hull_regen_add_perc_number
					}
					multiply_variable = {
						which = ship_hull_regen_add_perc_number
						value = 1
					}
					change_variable = {
						which = ship_hull_regen_add_perc_number
						value = 0
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_hull_regen_add_perc value > 0.00	}
						}
						remove_modifier = swn_mod_ship_hull_repair_anti
						add_modifier = {	modifier = swn_mod_ship_hull_repair_anti	months = 1	multiplier = ship_hull_regen_add_perc_number	}
					}
					export_modifier_to_variable = {
						modifier = ship_hull_regen_add_static
						variable = ship_hull_regen_add_static_number
					}
					multiply_variable = {
						which = ship_hull_regen_add_static_number
						value = 1
					}
					change_variable = {
						which = ship_hull_regen_add_static_number
						value = 0
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_hull_regen_add_static value > 0.00	}
						}
						remove_modifier = swn_mod_ship_hull_repair_anti_static
						add_modifier = {	modifier = swn_mod_ship_hull_repair_anti_static	months = 1	multiplier = ship_hull_regen_add_static_number	}
					}
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = speed_reduction
						}
					}
					export_modifier_to_variable = {
						modifier = ship_speed_reduction
						variable = ship_speed_reduction_number
					}
					multiply_variable = {
						which = ship_speed_reduction_number
						value = 1
					}
					change_variable = {
						which = ship_speed_reduction_number
						value = 0
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_speed_reduction_number value < 1.00	}
						}
						remove_modifier = swn_mod_ship_speed_reduction
						add_modifier = {	modifier = swn_mod_ship_speed_reduction	months = 1	multiplier = ship_speed_reduction_number	}
					}
				}
			}
		}
		THIS = {
			ship_event = {
				id = pgs.1
				day = 3
				scopes = { THIS = THIS }
			}
		}
	}
}

event = {
	id = pgs.2
	hide_window = yes
	trigger = {
	}
	is_triggered_only = yes
	immediate = {
		This = {
			save_event_target_as = paradox_generation_system_ship
		}
		From = {
			save_event_target_as = Disabler_Ship
		}
		if = {
			limit = {
				event_target:paradox_generation_system_ship.owner = {
					has_country_flag = PARADOX_GENERATION_SYSTEM
				}
				has_component = PARADOX_GENERATION_SYSTEM
				NOT = {
					has_ship_flag = paradox_generation_system_cooldown
				}
			}
			set_timed_ship_flag = {
				flag = paradox_generation_system_cooldown
				days = 3
			}
			This.solar_system = {
				every_ship_in_system = {
					limit = {
						if = {
							limit = {
								NOT = {
									event_target:paradox_generation_system_ship.owner = {
										has_country_flag = system_wide
									}
								}
							}
							is_in_combat = yes
						}
						NOT = {
							This = {
								is_owned_by = event_target:paradox_generation_system_ship.owner
							}
						}
					}
					if = {
						limit = {
							event_target:paradox_generation_system_ship.owner = {
								has_country_flag = ship_hp_amount_reduce_system
							}
						}
						export_trigger_value_to_variable = {
							trigger = has_hp
							variable = ship_hp_amount
						}
						subtract_variable = {
							which = ship_hp_amount
							value = @Residual_hull_value
						}
						reduce_hp = ship_hp_amount
					}
					if = {
						limit = {
							event_target:paradox_generation_system_ship.owner = {
								has_country_flag = shield_erasing_system
							}
						}
						export_modifier_to_variable = {
							modifier = ship_shield_reduction
							variable = ship_shield_reduction_number
						}
						multiply_variable = {
							which = ship_shield_reduction_number
							value = -1
						}
						change_variable = {
							which = ship_shield_reduction_number
							value = 1
						}
						if = {
							limit = {
								check_modifier_value = {	modifier = ship_shield_reduction value < 1.00	}
							}
							remove_modifier = swn_mod_ship_shield_reduction
							add_modifier = {	modifier = swn_mod_ship_shield_reduction	months = 1	multiplier = ship_shield_reduction_number	}
						}
					}
					if = {
						limit = {
							event_target:paradox_generation_system_ship.owner = {
								has_country_flag = shield_erasing_system
							}
						}
						export_modifier_to_variable = {
							modifier = ship_armor_reduction
							variable = ship_armor_reduction_number
						}
						multiply_variable = {
							which = ship_armor_reduction_number
							value = -1
						}
						change_variable = {
							which = ship_armor_reduction_number
							value = 0
						}
						if = {
							limit = {
								check_modifier_value = {	modifier = ship_armor_reduction value < 1.00	}
							}
							remove_modifier = swn_mod_ship_armor_reduction
							add_modifier = {	modifier = swn_mod_ship_armor_reduction	months = 1	multiplier = ship_armor_reduction_number	}
						}
					}
					if = {
						limit = {
							event_target:paradox_generation_system_ship.owner = {
								has_country_flag = narrative_editing_warship_narrative_strike
							}
						}
						destroy_ship = This
					}
					if = {
						limit = {
							event_target:paradox_generation_system_ship.owner = {
								has_country_flag = aggro_range_editor
							}
						}
						fleet = {
							set_aggro_range = 0
						}
					}
				}
			}
		}
	}
}

ship_event = {
	id = pgs.3
	hide_window = yes
	trigger = {
		This.owner = {
			has_country_flag = PARADOX_GENERATION_SYSTEM
		}
		has_component = PARADOX_GENERATION_SYSTEM
	}
	is_triggered_only = yes
	immediate = {
		This = {
			save_event_target_as = paradox_generation_system_ship
		}
		This.solar_system = {
			every_ship_in_system = {
				limit = {
					if = {
						limit = {
							NOT = {
								event_target:paradox_generation_system_ship.owner = {
									has_country_flag = system_wide
								}
							}
						}
						is_in_combat = yes
					}
					NOT = {
						This = {
							is_owned_by = event_target:paradox_generation_system_ship.owner
						}
					}
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = ship_hp_amount_reduce_system
						}
					}
					export_trigger_value_to_variable = {
						trigger = has_hp
						variable = ship_hp_amount
					}
					subtract_variable = {
						which = ship_hp_amount
						value = @Residual_hull_value
					}
					reduce_hp = ship_hp_amount
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = shield_erasing_system
						}
					}
					export_modifier_to_variable = {
						modifier = ship_shield_reduction
						variable = ship_shield_reduction_number
					}
					multiply_variable = {
						which = ship_shield_reduction_number
						value = -1
					}
					change_variable = {
						which = ship_shield_reduction_number
						value = 1
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_shield_reduction value < 1.00	}
						}
						remove_modifier = swn_mod_ship_shield_reduction
						add_modifier = {	modifier = swn_mod_ship_shield_reduction	months = 1	multiplier = ship_shield_reduction_number	}
					}
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = shield_erasing_system
						}
					}
					export_modifier_to_variable = {
						modifier = ship_armor_reduction
						variable = ship_armor_reduction_number
					}
					multiply_variable = {
						which = ship_armor_reduction_number
						value = -1
					}
					change_variable = {
						which = ship_armor_reduction_number
						value = 1
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_armor_reduction value < 1.00	}
						}
						remove_modifier = swn_mod_ship_armor_reduction
						add_modifier = {	modifier = swn_mod_ship_armor_reduction	months = 1	multiplier = ship_armor_reduction_number	}
					}
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = narrative_editing_warship_narrative_strike
						}
					}
					destroy_ship = This
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = aggro_range_editor
						}
					}
					fleet = {
						set_aggro_range = 0
					}
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = anti_hull_repair
						}
					}
					export_modifier_to_variable = {
						modifier = ship_hull_regen_add_perc
						variable = ship_hull_regen_add_perc_number
					}
					multiply_variable = {
						which = ship_hull_regen_add_perc_number
						value = 1
					}
					change_variable = {
						which = ship_hull_regen_add_perc_number
						value = 0
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_hull_regen_add_perc value > 0.00	}
						}
						remove_modifier = swn_mod_ship_hull_repair_anti
						add_modifier = {	modifier = swn_mod_ship_hull_repair_anti	months = 1	multiplier = ship_hull_regen_add_perc_number	}
					}
					export_modifier_to_variable = {
						modifier = ship_hull_regen_add_static
						variable = ship_hull_regen_add_static_number
					}
					multiply_variable = {
						which = ship_hull_regen_add_static_number
						value = 1
					}
					change_variable = {
						which = ship_hull_regen_add_static_number
						value = 0
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_hull_regen_add_static value > 0.00	}
						}
						remove_modifier = swn_mod_ship_hull_repair_anti_static
						add_modifier = {	modifier = swn_mod_ship_hull_repair_anti_static	months = 1	multiplier = ship_hull_regen_add_static_number	}
					}
				}
				if = {
					limit = {
						event_target:paradox_generation_system_ship.owner = {
							has_country_flag = speed_reduction
						}
					}
					export_modifier_to_variable = {
						modifier = ship_speed_reduction
						variable = ship_speed_reduction_number
					}
					multiply_variable = {
						which = ship_speed_reduction_number
						value = 1
					}
					change_variable = {
						which = ship_speed_reduction_number
						value = 0
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_speed_reduction_number value < 1.00	}
						}
						remove_modifier = swn_mod_ship_speed_reduction
						add_modifier = {	modifier = swn_mod_ship_speed_reduction	months = 1	multiplier = ship_speed_reduction_number	}
					}
				}
			}
		}
	}
}