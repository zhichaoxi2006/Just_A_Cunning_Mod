namespace = rds
ship_event = {
	id = rds.0
	hide_window = yes
	trigger = {
	}
	is_triggered_only = yes
	immediate = {
		ship_event = {
			id = rds.1
		}
	}
}

ship_event = {
	id = rds.1
	hide_window = yes
	trigger = {
		NOT = {
			has_ship_flag = reality_distortion_system_cooldown
		}
		owner = {
			has_country_flag  = can_use_rds
		}
		EQUIPPED_WITH_RDS = yes
	}
	is_triggered_only = yes
	immediate = {
		THIS = {
			save_event_target_as = reality_distortion_system_ship
		}
		event_target:reality_distortion_system_ship = {
			#UNBREAKABLE_SHIP
			if = {
				limit = {
					event_target:reality_distortion_system_ship = {
						EQUIPPED_WITH_RDS = yes
						has_rds_flag = { FLAG = unbreakable_ship }
					}
				}
				if = {
					limit = {
						has_ship_flag = reality_distortion_system_equipped_tag
					}
					set_ship_flag = reality_distortion_system_equipped_tag
				}
				set_disable_at_health = 0.001
				repair_ship = yes
				set_disabled = no
			}
			else_if = {
				limit = {
					OR = {
						NOT = {
							has_rds_flag = { FLAG = unbreakable_ship }
						}
						AND = {
							EQUIPPED_WITH_RDS = no
							has_ship_flag = reality_distortion_system_equipped_tag
						}
					}
				}
				set_disable_at_health = -1
				set_disabled = no
				remove_ship_flag = reality_distortion_system_equipped_tag
			}
			set_timed_ship_flag = {
				flag = reality_distortion_system_cooldown
				days = @flag_time
			}
			if = {
				limit = {
					EQUIPPED_WITH_RDS = yes
					if = {
						limit = {
							NOT = {
								has_global_flag = can_ai_use_rds
							}
						}
						owner = {
							is_ai = no	 
						}
					}
				}
				#NO_SHIPS_UNKEEP
				if = {
					limit = {
						event_target:reality_distortion_system_ship = {
							has_rds_flag = { FLAG = no_ships_unkeep }
						}
					}
					export_modifier_to_variable = {
						modifier = ships_upkeep_mult
						variable = ships_upkeep_mult_number
					}
					multiply_variable = {
						which = ships_upkeep_mult_number
						value = -1
					}
					change_variable = {
						which = ships_upkeep_mult_number
						value = -1
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ships_upkeep_mult value > -1 }
						}
						remove_modifier = swn_mod_ships_upkeep_mult
						add_modifier = {	modifier = swn_mod_ships_upkeep_mult	months = @modifier_time	multiplier = ships_upkeep_mult_number }
					}
				}
				#VECTOR_EDITING
				if = {
					limit = {
						event_target:reality_distortion_system_ship = {
							has_rds_flag = { FLAG = vector_editing }
						}
					}
					export_modifier_to_variable = {
						modifier = ship_speed_mult
						variable = Ship_speed_mult_number
					}
					export_modifier_to_variable = {
						modifier = ship_base_speed_mult
						variable = ship_base_speed_mult_number
					}
					multiply_variable = {
						which = ship_speed_mult_number
						value = -1
					}
					multiply_variable = {
						which = ship_base_speed_mult_number
						value = -1
					}
					change_variable = {
						which = ship_speed_mult_number
						value = 5
					}
					change_variable = {
						which = ship_base_speed_mult_number
						value = 10
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_speed_mult value < 5 }
						}
						remove_modifier = swn_mod_ship_speed_mult
						add_modifier = {	modifier = swn_mod_ship_speed_mult	months = @modifier_time	multiplier = ship_speed_mult_number }
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_speed_mult value < 10 }
						}
						remove_modifier = swn_mod_ship_base_speed_mult
						add_modifier = {	modifier = swn_mod_ship_base_speed_mult	months = @modifier_time	multiplier = ship_base_speed_mult_number }
					}
				}
				#COORDINATE_EDITING
				if = {
					limit = {
						event_target:reality_distortion_system_ship = {
							has_rds_flag = { FLAG = coordinate_editing }
						}
					}
					export_modifier_to_variable = {
						modifier = ship_windup_mult
						variable = ship_windup_mult_number
					}
					export_modifier_to_variable = {
						modifier = ship_interstellar_speed_mult
						variable = ship_interstellar_speed_mult_number
					}
					export_modifier_to_variable = {
						modifier = ship_jumpdrive_cooldown_mult
						variable = ship_jumpdrive_cooldown_mult_number
					}
					export_modifier_to_variable = {
						modifier = ship_ftl_jumpdrive_range_mult
						variable = ship_ftl_jumpdrive_range_mult_number
					}
	
					multiply_variable = {
						which = ship_windup_mult_number
						value = -1
					}
					multiply_variable = {
						which = ship_interstellar_speed_mult
						value = -1
					}
					multiply_variable = {
						which = ship_jumpdrive_cooldown_mult_number
						value = -1
					}
					multiply_variable = {
						which = ship_ftl_jumpdrive_range_mult_number
						value = -1
					}
	
					change_variable = {
						which = ship_windup_mult_number
						value = -1
					}
					change_variable = {
						which = ship_interstellar_speed_mult
						value = 5
					}
					change_variable = {
						which = ship_jumpdrive_cooldown_mult_number
						value = -1
					}
					change_variable = {
						which = ship_ftl_jumpdrive_range_mult_number
						value = 42
					}
	
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_windup_mult value > -1.00	}
						}
						remove_modifier = swn_mod_ship_windup_mult
						add_modifier = {	modifier = swn_mod_ship_windup_mult	months = @modifier_time	multiplier = ship_windup_mult_number	}
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_interstellar_speed_mult value < 5.00	}
						}
						remove_modifier = swn_mod_ship_interstellar_speed_mult
						add_modifier = {	modifier = swn_mod_ship_interstellar_speed_mult	months = @modifier_time	multiplier = ship_interstellar_speed_mult_number	}
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_jumpdrive_cooldown_mult value > -1.00	}
						}
						remove_modifier = swn_mod_ship_jumpdrive_cooldown_mult
						add_modifier = {	modifier = swn_mod_ship_jumpdrive_cooldown_mult	months = @modifier_time	multiplier = ship_jumpdrive_cooldown_mult_number	}
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_ftl_jumpdrive_range_mult value < 42.00	}
						}
						remove_modifier = swn_mod_ship_ftl_jumpdrive_range_mult
						add_modifier = {	modifier = swn_mod_ship_ftl_jumpdrive_range_mult	months = @modifier_time	multiplier = ship_ftl_jumpdrive_range_mult_number	}
					}
				}
				#NO_DISENGAGE
				if = {
					limit = {
						event_target:reality_distortion_system_ship = {
							has_rds_flag = { FLAG = no_disengage }
						}
					}
					export_modifier_to_variable = {
						modifier = ship_disengage_chance_reduction
						variable = ship_disengage_chance_reduction_number
					}
					multiply_variable = {
						which = ship_disengage_chance_reduction_number
						value = -1
					}
					change_variable = {
						which = ship_disengage_chance_reduction_number
						value = 1
					}
					if = {
						limit = {
							check_modifier_value = { modifier = ship_disengage_chance_reduction value < 1.00	}
						}
						remove_modifier = swn_mod_ship_disengage_chance_reduction
						add_modifier = {	modifier = swn_mod_ship_disengage_chance_reduction	months = @modifier_time	multiplier = ship_disengage_chance_reduction_number	}
					}
				}
				#ACCURACY_BUFF
				if = {
					limit = {
						event_target:reality_distortion_system_ship = {
							has_rds_flag = { FLAG = accuracy_buff }
						}
					}
					export_modifier_to_variable = {
						modifier = ship_accuracy_add
						variable = ship_accuracy_add_number
					}
					export_modifier_to_variable = {
						modifier = ship_accuracy_mult
						variable = ship_accuracy_mult_number
					}
					multiply_variable = {
						which = ship_accuracy_add_number
						value = -1
					}
					multiply_variable = {
						which = ship_accuracy_mult_number
						value = -1
					}
					change_variable = {
						which = ship_accuracy_add_number
						value = 0
					}
					change_variable = {
						which = ship_accuracy_mult_number
						value = 0
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_accuracy_add value < 0.00	}
						}
						remove_modifier = swn_mod_ship_accuracy_add
						add_modifier = {	modifier = swn_mod_ship_accuracy_add	months = @modifier_time	multiplier = ship_accuracy_add_number	}
					}
					if = {
						limit = {
							check_modifier_value = {	modifier = ship_accuracy_mult value < 0.00	}
						}
						remove_modifier = swn_mod_ship_accuracy_mult
						add_modifier = {	modifier = swn_mod_ship_accuracy_mult	months = @modifier_time	multiplier = ship_accuracy_mult_number	}
					}
				}
				#所有者写入到舰船中
				if = {
					limit = {
						NOT = {
							has_ship_flag = the_ship_owner_has_configured
						}
					}
					set_ship_flag = the_ship_owner_has_configured
					set_ship_flag = ship_owner_@This.owner
				}
				if = {
					limit = {
						NOT = {
							fleet = {
								has_fleet_flag = reality_distortion_system_cooldown #确保每个舰队只执行一次，减少卡顿。
							}
						}
					}
					fleet = {
						set_timed_fleet_flag = {
							flag = reality_distortion_system_cooldown
							days = @flag_time
						}
					}
					THIS.solar_system = {
						every_ship_in_system = {
							#目标判定
							limit = {
								NOR = {
									is_owned_by = event_target:reality_distortion_system_ship.owner #不是舰船所有者
									owner = {
										is_friendly_to = event_target:reality_distortion_system_ship.owner #不是与舰船所有者友好的国家
										is_neutral_to = event_target:reality_distortion_system_ship.owner #不是与舰船所有者中立的国家
									}
								}
								if = {
									limit = {
										NOT = {
											has_rds_flag = { FLAG = system_wide }
										}
									}
									is_in_combat = yes
								}
							}
							#ACCURACY_DEBUFF
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = accuracy_debuff }
									}
								}
								export_modifier_to_variable = {
									modifier = ship_accuracy_add
									variable = ship_accuracy_add_number
								}
								export_modifier_to_variable = {
									modifier = ship_accuracy_mult
									variable = ship_accuracy_mult_number
								}
								multiply_variable = {
									which = ship_accuracy_add_number
									value = -1
								}
								multiply_variable = {
									which = ship_accuracy_mult_number
									value = -1
								}
								change_variable = {
									which = ship_accuracy_add_number
									value = -100
								}
								change_variable = {
									which = ship_accuracy_mult_number
									value = -1
								}
								if = {
									limit = {
										check_modifier_value = {	modifier = ship_accuracy_add value > -100.00	}
									}
									remove_modifier = swn_mod_ship_accuracy_add
									add_modifier = {	modifier = swn_mod_ship_accuracy_add	months = @modifier_time	multiplier = ship_accuracy_add_number	}
								}
								if = {
									limit = {
										check_modifier_value = {	modifier = ship_accuracy_mult value > -1.00	}
									}
									remove_modifier = swn_mod_ship_accuracy_mult
									add_modifier = {	modifier = swn_mod_ship_accuracy_mult	months = @modifier_time	multiplier = ship_accuracy_mult_number	}
								}
							}
							#SHIP_HP_AMOUNT_REDUCE_SYSTEM
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = ship_hp_amount_reduce_system }
									}
								}
								export_trigger_value_to_variable = {
									trigger = has_hp
									variable = ship_hp_amount
								}
								subtract_variable = {
									which = ship_hp_amount
									value = @Residual_hull_value
								}
								reduce_hp = ship_hp_amount
								if = {
									limit = {
										check_modifier_value = { modifier = ship_hull_mult value > @rds_script_ship_hull_mult }
									}
									remove_modifier = swn_mod_ship_hull_mult
									add_modifier = { modifier = swn_mod_ship_hull_mult months = @modifier_time multiplier = value:dynamic_ship_hull_mult }
								}
								if = {
									limit = {
										check_modifier_value = { modifier = ship_hull_mult value > 0 }
									}
									remove_modifier = swn_mod_ship_hull_add
									add_modifier = { modifier = swn_mod_ship_hull_add months = @modifier_time multiplier = value:dynamic_ship_hull_add }
								}
								set_timed_ship_flag = {
									flag = ship_hp_amount_reduce_system_target
									days = @flag_time
								}
							}
							#SHIELD_ERASING_SYSTEM
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = shield_erasing_system }
									}
								}
								export_modifier_to_variable = {
									modifier = ship_shield_reduction
									variable = ship_shield_reduction_number
								}
								multiply_variable = {
									which = ship_shield_reduction_number
									value = -1
								}
								change_variable = {
									which = ship_shield_reduction_number
									value = 1
								}
								if = {
									limit = {
										check_modifier_value = {	modifier = ship_shield_reduction value < 1.00	}
									}
									remove_modifier = swn_mod_ship_shield_reduction
									add_modifier = {	modifier = swn_mod_ship_shield_reduction	months = @modifier_time	multiplier = ship_shield_reduction_number	}
								}
							}
							#ARMOR_ERASING_SYSTEM
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = armor_erasing_system }
									}
								}
								export_modifier_to_variable = {
									modifier = ship_armor_reduction
									variable = ship_armor_reduction_number
								}
								multiply_variable = {
									which = ship_armor_reduction_number
									value = -1
								}
								change_variable = {
									which = ship_armor_reduction_number
									value = 1
								}
								if = {
									limit = {
										check_modifier_value = {	modifier = ship_armor_reduction value < 1.00	}
									}
									remove_modifier = swn_mod_ship_armor_reduction
									add_modifier = {	modifier = swn_mod_ship_armor_reduction	months = @modifier_time	multiplier = ship_armor_reduction_number	}
								}
							}
							#SOMEBODY_ELSE_PROBLEM_AURA
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = somebody_else_problem_aura }
									}
								}
								export_modifier_to_variable = {
									modifier = ship_engagement_range_mult
									variable = ship_engagement_range_mult_number
								}
								multiply_variable = {
									which = ship_engagement_range_mult_number
									value = -1
								}
								change_variable = {
									which = ship_engagement_range_mult_number
									value = -10
								}
								if = {
									limit = {
										check_modifier_value = {	modifier = ship_engagement_range_mult value > -10.00	}
									}
									remove_modifier = swn_mod_ship_engagement_range_mult
									add_modifier = {	modifier = swn_mod_ship_engagement_range_mult	months = @modifier_time	multiplier = ship_engagement_range_mult_number	}
								}
							}
							#INSTANT_KILL
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = instant_kill }
									}
								}
								destroy_ship = This
							}
							#FLEET_EVENT_UNLOCKER
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = fleet_event_unlocker }
									}
								}
								fleet = {
									set_event_locked = no
								}
							}
							#ANTI_HULL_REPAIR
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = anti_hull_repair }
									}
								}
								export_modifier_to_variable = {
									modifier = ship_hull_regen_add_perc
									variable = ship_hull_regen_add_perc_number
								}
								multiply_variable = {
									which = ship_hull_regen_add_perc_number
									value = -1
								}
								change_variable = {
									which = ship_hull_regen_add_perc_number
									value = -1
								}
								if = {
									limit = {
										check_modifier_value = {	modifier = ship_hull_regen_add_perc value > 0.00	}
									}
									remove_modifier = swn_mod_ship_hull_repair_anti
									add_modifier = {	modifier = swn_mod_ship_hull_repair_anti	months = @modifier_time	multiplier = ship_hull_regen_add_perc_number	}
								}
								export_modifier_to_variable = {
									modifier = ship_hull_regen_add_static
									variable = ship_hull_regen_add_static_number
								}
								multiply_variable = {
									which = ship_hull_regen_add_static_number
									value = -1
								}
								change_variable = {
									which = ship_hull_regen_add_static_number
									value = 0
								}
								if = {
									limit = {
										check_modifier_value = {	modifier = ship_hull_regen_add_static value > 0.00	}
									}
									remove_modifier = swn_mod_ship_hull_repair_anti_static
									add_modifier = {	modifier = swn_mod_ship_hull_repair_anti_static	months = @modifier_time	multiplier = ship_hull_regen_add_static_number	}
								}
							}
							#SPEED_REDUCTION
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = speed_reduction }
									}
								}
								export_modifier_to_variable = {
									modifier = ship_speed_reduction
									variable = ship_speed_reduction_number
								}
								multiply_variable = {
									which = ship_speed_reduction_number
									value = -1
								}
								change_variable = {
									which = ship_speed_reduction_number
									value = 1
								}
								if = {
									limit = {
										check_modifier_value = {	modifier = ship_speed_reduction value < 1.00	}
									}
									remove_modifier = swn_mod_ship_speed_reduction
									add_modifier = {	modifier = swn_mod_ship_speed_reduction	months = @modifier_time	multiplier = ship_speed_reduction_number	}
								}
							}
							#NO_DISABLED_SHIP
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = no_disabled_ship }
									}
								}
								set_disable_at_health = -1
							}
							#COUNTRY_DESTROYER
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = country_destroyer }
									}
								}
								owner = {
									destroy_country = yes
								}
							}
							#OWNER_CHANGER
							if = {
								limit = {
									event_target:reality_distortion_system_ship = {
										has_rds_flag = { FLAG = owner_changer }
									}
								}
								fleet = {
									set_owner = event_target:reality_distortion_system_ship.owner
								}
							}
						}
					}
				}
			}
		}
		ship_event = {
			id = rds.0
			days = 1
		}
	}
}

event = {
	id = rds.2
	hide_window = yes
	trigger = {
	}
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				has_rds_flag = { FLAG = unbreakable_ship }
				OR = {
					EQUIPPED_WITH_RDS = yes
					has_component = SHIP_HULL_PROTECTION_MODULE
				}
			}
			This = {
				repair_ship = yes
				set_disabled = no
				ship_event = {
					id = rds.1
				}
			}
		}
	}
}

ship_event = {
	id = rds.3
	hide_window = yes
	trigger = {
	}
	is_triggered_only = yes
	immediate = {
		fleet = {
			remove_fleet_flag = reality_distortion_system_cooldown
		}
		remove_ship_flag = reality_distortion_system_cooldown
		ship_event = {
			id = rds.1
		}
	}
}

event = {
	id = rds.4
	hide_window = yes
	trigger = {
	}
	is_triggered_only = yes
	immediate = {
		ship_event = {
			id = rds.1
		}
	}
}

event = {
	id = rds.6
	hide_window = yes
	trigger = {
	}
	is_triggered_only = yes
	immediate = {
		This = {
			if = {
				limit = {
					has_ship_flag = ship_hp_amount_reduce_system_target
				}
				export_trigger_value_to_variable = {
					trigger = has_hp
					variable = ship_hp_amount
				}
				subtract_variable = {
					which = ship_hp_amount
					value = @Residual_hull_value
				}
				reduce_hp = ship_hp_amount
			}
		}
	}
}

event = {
	id = rds.7
	hide_window = yes
	trigger = {
		OR = {
			has_component = SHIP_HULL_PROTECTION_MODULE
			has_ship_flag = Ship_Equipped_With_SHPM
		}
	}
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				has_component = SHIP_HULL_PROTECTION_MODULE
			}
			set_disable_at_health = 0.001
			if = {
				limit = {
					NOT = {
						fleet = {
							has_fleet_flag = unbreakable_ship
						}
					}
				}
				fleet = {
					set_fleet_flag = unbreakable_ship
				}
			}
			if = {
				limit = {
					NOT = {
						has_ship_flag = Ship_Equipped_With_SHPM
					}
				}
				set_ship_flag = Ship_Equipped_With_SHPM
			}
		}
		else_if = {
			limit = { 
				NOT = {
					has_component = SHIP_HULL_PROTECTION_MODULE
				}
				has_ship_flag = Ship_Equipped_With_SHPM
			}
			set_disable_at_health = -1
			remove_ship_flag = Ship_Equipped_With_SHPM
		}
	}
}


fleet_event = {
	id = rds.8
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ship_class = shipclass_science_ship
		has_fleet_flag = instant_survey
		any_controlled_ship = {
			EQUIPPED_WITH_RDS = yes
		}
	}
	immediate = {
		random_controlled_ship = { save_event_target_as = rds_target_ship }
		if = {
			limit = { solar_system = { any_system_planet = { is_surveyed = { who = root.owner status = no } } } }
			solar_system = {
				every_system_planet = {
					limit = { is_surveyed = { who = root.owner status = no } }
					set_surveyed = { surveyor = root.owner surveyed = yes }
					fire_on_action = {
						on_action = on_planet_surveyed
						scopes = { from = root.owner fromfrom = root }
					}
					event_target:rds_target_ship = { fire_on_action = {
						on_action = on_survey
						scopes = { from = prev }
					} }
				}
			}
			owner = { fire_on_action = {
				on_action = on_system_survey
				scopes = { from = root.solar_system fromfrom = event_target:rds_target_ship }
			} }
			event_target:rds_target_ship = { fire_on_action = {
				on_action = on_system_survey_ship
				scopes = { from = root.solar_system }
			} }
		}
	}
}

event = {
	id = rds.9
	hide_window = yes
	trigger = {
	}
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				fromfrom = {
					any_controlled_ship = {
						OR = {
							has_component = RDS_EVENT_CANNON
						}
					}
				}
			}
			fromfrom = {
				random_owned_ship = {
					limit = {
						EQUIPPED_WITH_RDS = yes
					}
					fleet = {
						remove_fleet_flag = reality_distortion_system_cooldown
					}
					remove_ship_flag = reality_distortion_system_cooldown
					ship_event = {
						id = rds.1
					}
				}
			}
			fromfromfrom = {
				random_controlled_ship = {
					limit = {
						NOT = {
							has_global_flag = debug_mode
						}
					}
					set_ship_flag = ship_which_will_not_delete
				}
				every_controlled_ship = {
					limit = {
					}
					if = {
						limit = { 
							NOT = {
								has_ship_flag = ship_which_will_not_delete
							}
						}
						destroy_ship = this
					}
					else = {
						remove_ship_flag = ship_which_will_not_delete
					}
				}
			}
		}
	}
}